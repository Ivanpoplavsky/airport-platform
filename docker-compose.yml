version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: airport
      POSTGRES_USER: airport
      POSTGRES_PASSWORD: airport
    ports: ["5432:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  provider-tasking:
    image: python:3.12-slim
    working_dir: /app
    env_file: [.env]
    volumes:
      - ./services/provider-tasking:/app
    command: bash -lc "pip install --no-cache-dir -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8100 --reload"
    ports: ["8100:8100"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  booking-lookup:
    image: python:3.12-slim
    working_dir: /app
    volumes:
      - ./services/booking-lookup:/app
    command: bash -lc "pip install --no-cache-dir -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8200 --reload"
    ports: ["8200:8200"]

  flight-catalog:
    image: python:3.12-slim
    working_dir: /app
    environment:
      DB_HOST: postgres
    volumes:
      - ./services/flight-catalog:/app
    command: bash -lc "pip install --no-cache-dir -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8300 --reload"
    ports: ["8300:8300"]
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_data:
